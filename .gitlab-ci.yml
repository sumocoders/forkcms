stages:
    - build
    - code quality
    - dependency scanning
    - test


# Cache default configuration
cache: &global_cache
    key: "$CI_PIPELINE_ID"
    paths:
        - app/config/parameters.yml
        - bin
        - css
        - fonts
        - images
        - js
        - node_modules
        - vendor
    policy: pull

.mysql_configuration: &mysql_configuration
    MYSQL_DATABASE: ci_test
    MYSQL_ROOT_PASSWORD: root

.before_script_test_template: &before_script_test_configuration
    # import test DB
    - mysql -h mysql -u root -proot ci_test < tests/data/test_db.sql
    # make sure bundle.js exists
    - touch src/Frontend/Core/Js/bundle.js
    # generate correct parameters.yml
    - php bin/generate-parameters-gitlab
    - cp app/config/parameters.yml.gitlab app/config/parameters.yml
    - echo 'FORK_ENV=dev' >> .env.local
    - echo 'FORK_DEBUG=true' >> .env.local
    - sed -i -E 's/database\.name:(.*)ci$/database.name:\1ci_test/g' app/config/parameters.yml
    # create assets for test env
    - php bin/console --no-interaction assets:install .
    # clear cache
    - php bin/console --no-interaction forkcms:cache:clear --env=dev


# Build section
Install dependencies and build assets:
    image: sumocoders/cli-tools-php80:latest
    script:
        - COMPOSER_MEMORY_LIMIT=-1 composer install --no-scripts --no-progress
        - cp app/config/parameters.yml.dist app/config/parameters.yml
        - echo 'FORK_ENV=dev' >> .env.local
        - echo 'FORK_DEBUG=true' >> .env.local
        - npm install --no-progress
        - node_modules/.bin/gulp build
    #        - npm run build
    cache:
        <<: *global_cache
        policy: pull-push
    stage: build
    tags:
        - docker


# Code Quality section
PHP_CodeSniffer - check code styling:
    image: sumocoders/fork-php80:latest
    services:
        - mysql:5.7
    before_script:
        - *before_script_test_configuration
    script:
        - php bin/phpcs --report-full --report-junit=phpcs-report.xml
    artifacts:
        expire_in: 1 week
        reports:
            junit: phpcs-report.xml
    stage: code quality
    needs: ["Install dependencies and build assets"]
    tags:
        - docker
    variables:
        <<: *mysql_configuration
    allow_failure: true

PHPStan - check for bugs:
    image: sumocoders/fork-php80:latest
    services:
        - mysql:5.7
    before_script:
        - *before_script_test_configuration
        - php bin/console cache:warmup --no-interaction --env=dev
    script:
        - php bin/phpstan analyze --memory-limit=-1 --error-format=junit --no-progress > phpstan-report.xml
    after_script:
        # Run it again so the output is visible in the job
        - php bin/phpstan analyze --memory-limit=-1 --no-progress
    artifacts:
        expire_in: 1 week
        reports:
            junit: phpstan-report.xml
    stage: code quality
    needs: ["Install dependencies and build assets"]
    tags:
        - docker
    variables:
        <<: *mysql_configuration
    allow_failure: true

StandardJS - check code styling:
    image: sumocoders/cli-tools-php80:latest
    script:
        - php bin/convert-to-junit-xml convert:standardjs "$(node_modules/.bin/standard)" > standardjs-report.xml
    after_script:
        # Run it again so the output is visible in the job
        - node_modules/.bin/standard
    artifacts:
        expire_in: 1 week
        reports:
            junit: standardjs-report.xml
    stage: code quality
    needs: ["Install dependencies and build assets"]
    tags:
        - docker
    allow_failure: true


# Dependency Scanning section
NPM packages - check for vulnerabilities:
    image: sumocoders/cli-tools-php80:latest
    script:
        - php bin/convert-to-junit-xml convert:npm-audit "$(npm audit --production --json)" > npm-audit-report.xml
    after_script:
        # Run it again so the output is visible in the job output
        - npm audit --production
    artifacts:
        expire_in: 1 week
        reports:
            junit: npm-audit-report.xml
    stage: dependency scanning
    needs: ["Install dependencies and build assets"]
    tags:
        - docker
    allow_failure: true

PHP packages - composer outdated:
    image: sumocoders/cli-tools-php80:latest
    script:
        - composer outdated --ansi --no-interaction
    stage: dependency scanning
    needs: [ "Install dependencies and build assets" ]
    tags:
        - docker
    allow_failure: true


# Test section
PHPUnit - Run unit tests:
    image: sumocoders/fork-php80:latest
    services:
        - mysql:5.7
    before_script:
        - *before_script_test_configuration
        - sed -i -E 's/database\.name:(.*)ci_test$/database.name:\1ci/g' app/config/parameters.yml
        - cat app/config/parameters.yml
    script:
        - php bin/simple-phpunit --testsuite=unit --log-junit phpunit-unit-report.xml
    artifacts:
        reports:
            junit: phpunit-unit-report.xml
    stage: test
    needs: ["Install dependencies and build assets"]
    tags:
        - docker
    variables:
        <<: *mysql_configuration
